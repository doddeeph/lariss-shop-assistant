package id.lariss.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StorageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStorageAllPropertiesEquals(Storage expected, Storage actual) {
        assertStorageAutoGeneratedPropertiesEquals(expected, actual);
        assertStorageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStorageAllUpdatablePropertiesEquals(Storage expected, Storage actual) {
        assertStorageUpdatableFieldsEquals(expected, actual);
        assertStorageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStorageAutoGeneratedPropertiesEquals(Storage expected, Storage actual) {
        assertThat(expected)
            .as("Verify Storage auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStorageUpdatableFieldsEquals(Storage expected, Storage actual) {
        assertThat(expected)
            .as("Verify Storage relevant properties")
            .satisfies(e -> assertThat(e.getAttributeLabel()).as("check attributeLabel").isEqualTo(actual.getAttributeLabel()))
            .satisfies(e -> assertThat(e.getAttributeName()).as("check attributeName").isEqualTo(actual.getAttributeName()))
            .satisfies(e -> assertThat(e.getOptionLabel()).as("check optionLabel").isEqualTo(actual.getOptionLabel()))
            .satisfies(e -> assertThat(e.getOptionValue()).as("check optionValue").isEqualTo(actual.getOptionValue()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStorageUpdatableRelationshipsEquals(Storage expected, Storage actual) {
        // empty method
    }
}
