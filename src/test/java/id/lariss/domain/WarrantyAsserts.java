package id.lariss.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WarrantyAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarrantyAllPropertiesEquals(Warranty expected, Warranty actual) {
        assertWarrantyAutoGeneratedPropertiesEquals(expected, actual);
        assertWarrantyAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarrantyAllUpdatablePropertiesEquals(Warranty expected, Warranty actual) {
        assertWarrantyUpdatableFieldsEquals(expected, actual);
        assertWarrantyUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarrantyAutoGeneratedPropertiesEquals(Warranty expected, Warranty actual) {
        assertThat(expected)
            .as("Verify Warranty auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarrantyUpdatableFieldsEquals(Warranty expected, Warranty actual) {
        assertThat(expected)
            .as("Verify Warranty relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getWarrantyEn()).as("check warrantyEn").isEqualTo(actual.getWarrantyEn()))
            .satisfies(e -> assertThat(e.getWarrantyId()).as("check warrantyId").isEqualTo(actual.getWarrantyId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarrantyUpdatableRelationshipsEquals(Warranty expected, Warranty actual) {
        // empty method
    }
}
