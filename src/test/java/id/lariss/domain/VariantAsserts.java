package id.lariss.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VariantAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVariantAllPropertiesEquals(Variant expected, Variant actual) {
        assertVariantAutoGeneratedPropertiesEquals(expected, actual);
        assertVariantAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVariantAllUpdatablePropertiesEquals(Variant expected, Variant actual) {
        assertVariantUpdatableFieldsEquals(expected, actual);
        assertVariantUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVariantAutoGeneratedPropertiesEquals(Variant expected, Variant actual) {
        assertThat(expected)
            .as("Verify Variant auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVariantUpdatableFieldsEquals(Variant expected, Variant actual) {
        assertThat(expected)
            .as("Verify Variant relevant properties")
            .satisfies(e -> assertThat(e.getLabel()).as("check label").isEqualTo(actual.getLabel()))
            .satisfies(e -> assertThat(e.getSku()).as("check sku").isEqualTo(actual.getSku()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVariantUpdatableRelationshipsEquals(Variant expected, Variant actual) {
        assertThat(expected)
            .as("Verify Variant relationships")
            .satisfies(e -> assertThat(e.getColor()).as("check color").isEqualTo(actual.getColor()))
            .satisfies(e -> assertThat(e.getProcessor()).as("check processor").isEqualTo(actual.getProcessor()))
            .satisfies(e -> assertThat(e.getMemory()).as("check memory").isEqualTo(actual.getMemory()))
            .satisfies(e -> assertThat(e.getStorage()).as("check storage").isEqualTo(actual.getStorage()))
            .satisfies(e -> assertThat(e.getProducts()).as("check products").isEqualTo(actual.getProducts()));
    }
}
